version: '3.3'

services:
  jenkins:
    build: ./server-jenkins
    image: jenkins
    container_name: jenkins 
    privileged: true
    ports:
      - "8080:8080"
      - "50000:50000"  
    volumes:
      - ./server-jenkins/_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      JENKINS_HOST_HOME: "./server-jenkins/_data"
    tty: true
  nginx:
    # restart: unless-stopped
    build: ./server-nginx
    image: nginx
    container_name: nginx 
    volumes:
      - ./static:/usr/src/app/static
      - ./server-nginx/pages:/usr/src/app/server-nginx/pages
      - ./server-nginx/ssl:/usr/src/app/server-nginx/ssl:ro
      # - ./server-nginx/config:/usr/src/app/server-nginx/config
    depends_on:
      - gateway
      - user
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 200M
        reservations:
          cpus: '0.1'
          memory: 200M
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      MONGO_DATA_DIR: /data/db
      MONGO_LOG_DIR: /dev/null
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: mongod --auth
  redis:
    restart: unless-stopped
    image: "redis"
    ports:
      - 6379
    container_name: redis
    volumes: 
      - ./_data/redis:/data
  gateway:
    restart: unless-stopped
    image: gateway
    container_name: gateway
    build:
      context: ./
      dockerfile: ./server-gateway/Dockerfile
    ports:
      - 3100
    volumes:
      - ./_config:/usr/src/app/_config
      - ./server-gateway/src:/usr/src/app/server-gateway/src
      - ./server-gateway/_log:/usr/src/app/server-gateway/_log
      - ./static/image:/usr/src/app/static/image
      - /usr/src/app/server-gateway/node_modules
      # - /usr/src/app/shared/modules/coinpush/node_modules
    # links:
    #   - redis
  cache:
    restart: unless-stopped
    image: cache
    container_name: "cache"
    build:
      context: ./
      dockerfile: server-cache/Dockerfile
    ports:
      - 3001
    volumes:
      - ./_config:/usr/src/app/_config
      - ./server-cache/src:/usr/src/app/server-cache/src
      - ./server-cache/_log:/usr/src/app/server-cache/_log
      - ./shared/modules/coinpush/src:/usr/src/app/shared/modules/coinpush/src
      - /usr/src/app/server-cache/node_modules
      # - /usr/src/app/shared/modules/coinpush/node_modules
    links:
      - redis
      - gateway
      # - mongodb
  user:
    restart: unless-stopped
    image: user
    container_name: user
    build:
      context: ./
      dockerfile: server-user/Dockerfile
    ports:
      - 3008
    volumes:
      - ./_config:/usr/src/app/_config
      - ./server-user/src:/usr/src/app/server-user/src
      - ./server-user/_log:/usr/src/app/server-user/_log
      - /usr/src/app/server-user/node_modules
      # - /usr/src/app/shared/modules/coinpush/node_modules
    links:
      - redis
      - gateway
      # - mongodb
  notify:
    restart: unless-stopped
    image: notify
    container_name: notify
    build:
      context: ./
      dockerfile: server-notify/Dockerfile
    ports:
      - 3010
    volumes:
      - ./_config:/usr/src/app/_config
      - ./server-notify/src:/usr/src/app/server-notify/src
      - ./server-notify/_log:/usr/src/app/server-notify/_log
      - /usr/src/app/server-notify/node_modules
      # - /usr/src/app/shared/modules/coinpush/node_modules
    links:
      - redis
      # - mongodb
  comment:
    restart: unless-stopped
    image: comment
    container_name: comment
    build:
      context: ./
      dockerfile: server-comment/Dockerfile
    ports:
      - 3009
    volumes:
      - ./_config:/usr/src/app/_config
      - ./server-comment/src:/usr/src/app/server-comment/src
      - ./server-comment/_log:/usr/src/app/server-comment/_log
      - /usr/src/app/server-comment/node_modules
      # - /usr/src/app/shared/modules/coinpush/node_modules
    links:
      - redis
      # - mongodb
  event:
    restart: unless-stopped
    image: event
    container_name: event
    build:
      context: ./
      dockerfile: server-event/Dockerfile
    ports:
      - 3011
    volumes:
      - ./_config:/usr/src/app/_config
      - ./server-event/src:/usr/src/app/server-event/src
      - ./server-event/_log:/usr/src/app/server-event/_log
      - /usr/src/app/server-event/node_modules
      # - /usr/src/app/shared/modules/coinpush/node_modules
    links:
      - redis
      # - mongodb
  client:
    image: client
    container_name: client
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    volumes:
      - ./static/clients:/usr/src/app/static/clients
      - ./client:/usr/src/app/client
      - /usr/src/app/client/node_modules
      # - ./shared/modules/coinpush/src:/usr/src/app/shared/modules/coinpush/src
      # - /usr/src/app/shared/modules/coinpush/node_modules
  client-app:
    image: client-app
    container_name: client-app
    build:
      context: ./
      dockerfile: ./client-app/Dockerfile
    volumes:
      - ./client-app:/usr/src/app/client-app
      - ./static/clients/web:/usr/src/app/static/clients/web